@model ML.Transaccion
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Form</h2>
<div class="row">
    <div class="container">
        <div class="col-md-12">
            <h2>Transaccion</h2>
            <h5>Ingrese la nueva transaccion:</h5>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>

    <div class="row">
        
            @using (Html.BeginForm("Form", "Transaccion", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.HiddenFor(model => model.IdTransaccion)
                    </div>

                    <div class="col-md-3 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Fecha)
                        <div class="input-group">
                            <span class="input-group-text" id="basic-addon"><i class="bi bi-calendar2-week"></i></span>
                            @Html.TextBoxFor(model => model.Fecha, "{0:yyyy-MM-dd}", new { @class = "form-control", @id = "txtFecha", @readonly = "readonly" })
                        </div>
                    </div>


                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Usuario.IdUsuario, "Selecciona un usuario correspondiente")
                        <div class="input-group">
                            <span class="input-group-text" id="basic-addon"><i class="bi bi-people"></i></span>
                            @Html.DropDownListFor(model => model.Usuario.IdUsuario, new SelectList(Model.Usuario.Usuarios, "IdUsuario", "Nombre"), "Selecciona un usuario correspondiente", new { @class = "form-control", @id = "ddlUsuario" })
                        </div>
                    </div>

                    <div class="col-md-4 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Producto.IdProducto, "Selecciona un producto correspondiente")
                        <div class="input-group">
                            <span class="input-group-text" id="basic-addon"><i class="bi bi-people"></i></span>
                            @Html.DropDownListFor(model => model.Producto.IdProducto, new SelectList(Model.Producto.Productos, "IdProducto", "Nombre"), "Selecciona un producto correspondiente", new { @class = "form-control", @id = "ddlProducto" })
                        </div>
                    </div>

                    <div class="col-md-3 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Cantidad)
                        <div class="input-group">
                            <span class="input-group-text" id="basic-addon"><i class="bi bi-telephone"></i></span>
                            <input type="number" class="form-control" id="txtCantidad" name="txtCantidad" min="1" step="1" />
                        </div>
                    </div>

                    <div class="col-md-3 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Total)
                        <div class="input-group">
                            <span class="input-group-text" id="basic-addon"><i class="bi bi-telephone"></i></span>
                            @Html.TextBoxFor(model => model.Total, new { @class = "form-control form-control-plaintext", @id = "txtTotal", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="col-md-3 col-12 col-sm-6">
                        @Html.LabelFor(model => model.MontoIngresado)
                        <div class="input-group">
                            <span class="input-group-text" id="basic-addon"><i class="bi bi-telephone"></i></span>
                            @Html.TextBoxFor(model => model.MontoIngresado, new { @class = "form-control form-control-plaintext text-success", @id = "txtMontoIngresado", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="col-md-3 col-12 col-sm-6">
                        @Html.LabelFor(model => model.Cambio)
                        <div class="input-group">
                            <span class="input-group-text" id="basic-addon"><i class="bi bi-telephone"></i></span>
                            @Html.TextBoxFor(model => model.Cambio, new { @class = "form-control form-control-plaintext text-danger", @id = "txtCambio", @readonly = "readonly" })
                        </div>
                    </div>



                    <div class="col-md-3">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "GetAll", "Transacciones", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            }
    </div>
</div>

@section Scripts
{
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
        // Obtener la fecha actual del sistema en formato deseado (ejemplo: yyyy-MM-dd)
        var fechaActual = new Date().toISOString().split('T')[0];

        // Establecer la fecha actual en el campo de fecha
        document.getElementById("txtFecha").value = fechaActual;
        
        ////////////////////////////////////////////////////////////////////////////////
            $(document).ready(function () {
                $("#ddlProducto").change(function () {
                    actualizarTotal();
                });

                $("#txtCantidad").on("input", function () {
                    actualizarTotal();
                });

                function actualizarTotal() {
                    var idProducto = $("#ddlProducto").val();
                    var cantidad = $("#txtCantidad").val();

                    // Hacer la petición AJAX para obtener el precio del producto
                    $.ajax({
                        url: '/Ejemplo/ObtenerInformacion',  // Reemplaza con la ruta correcta de tu controlador
                        type: 'GET',
                        data: { idProducto: idProducto },
                        success: function (data) {
                            // Calcular el total y actualizar el campo Total
                            var precioUnitario = data.Precio || 0;
                            var total = precioUnitario * cantidad;
                            $("#txtTotal").val(total.toFixed(2));
                        },
                        error: function (xhr, status, error) {
                            console.error('Error en la llamada AJAX:', status, error);
                        }
                    });
                }
            });
    </script>
}
